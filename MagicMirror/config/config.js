/* Magic Mirror Config Sample
 *
 * By Michael Teeuw https://michaelteeuw.nl
 * MIT Licensed.
 *
 * For more information on how you can configure this file
 * see https://docs.magicmirror.builders/getting-started/configuration.html#general
 * and https://docs.magicmirror.builders/modules/configuration.html
 */
let config = {
	address: "localhost", 	// Address to listen on, can be:
							// - "localhost", "127.0.0.1", "::1" to listen on loopback interface
							// - another specific IPv4/6 to listen on a specific interface
							// - "0.0.0.0", "::" to listen on any interface
							// Default, when address config is left out or empty, is "localhost"
	port: 8080,
	basePath: "/", 	// The URL path where MagicMirror is hosted. If you are using a Reverse proxy
					// you must set the sub path here. basePath must end with a /
	ipWhitelist: ["127.0.0.1", "::ffff:127.0.0.1", "::1"], 	// Set [] to allow all IP addresses
															// or add a specific IPv4 of 192.168.1.5 :
															// ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.1.5"],
															// or IPv4 range of 192.168.3.0 --> 192.168.3.15 use CIDR format :
															// ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.3.0/28"],

	useHttps: false, 		// Support HTTPS or not, default "false" will use HTTP
	httpsPrivateKey: "", 	// HTTPS private key path, only require when useHttps is true
	httpsCertificate: "", 	// HTTPS Certificate path, only require when useHttps is true

	language: "ko",
	locale: "ko-KR",
	logLevel: ["INFO", "LOG", "WARN", "ERROR"], // Add "DEBUG" for even more logging
	timeFormat: 24,
	units: "metric",
	// serverOnly:  true/false/"local" ,
	// local for armv6l processors, default
	//   starts serveronly and then starts chrome browser
	// false, default for all NON-armv6l devices
	// true, force serveronly mode, because you want to.. no UI on this device

	modules: [
		{
			module: "alert",
		},
		{
			module: "updatenotification",
			position: "top_bar"
		},
		{
			module: "clock",
			position: "top_left",
			config: {
				timezone: "Etc/GMT-9"
				}
		},
		{
			module: "calendar",
			header: "대한민국 공휴일",
			position: "top_left",
			config: {
				calendars: [
					{
						symbol: "calendar-check",
						// url: "webcal://www.calendarlabs.com/ical-calendar/ics/69/Korea_Holidays.ics"
						url: "https://calendar.google.com/calendar/ical/ltm0jrlsamv8mlhrg0bpcgu6ps%40group.calendar.google.com/public/basic.ics"
					}
				]
			}
		},
/*
		{
			module: "MMM-GoogleAssistant",
		//	position: "fullscreen_above",
			position: "top_left",
			config: {
				assistantConfig: {
					lang: "ko-KR",
					latitude: 36.947535,
					longitude: 127.908183,
				},
				micConfig: { // put there configuration generated by auto-installer
					recorder: "arecord",
					device: "plughw:2",
				},
			}
		},
*/
		{
			module: "compliments",
			position: "lower_third"
		},
		{
			module: "weather",
			position: "top_right",
			config: {
				weatherProvider: "openweathermap",
				type: "current",
				location: "스울",
				locationID: "1835847", //ID from http://bulk.openweathermap.org/sample/city.list.json.gz; unzip the gz file and find your city
				apiKey: "fc8ddfad6c7731ee9b62ebf56b636cc5"
			}
		},
		{
			module: "weather",
			position: "top_right",
			header: "날씨 정보",
			config: {
				weatherProvider: "openweathermap",
				type: "forecast",
				location: "스울",
				locationID: "1835847", //ID from http://bulk.openweathermap.org/sample/city.list.json.gz; unzip the gz file and find your city
				apiKey: "fc8ddfad6c7731ee9b62ebf56b636cc5"
			}
		},
		{
			module: "newsfeed",
			position: "bottom_bar",
			config: {
				feeds: [
					{
						title: "조선일보",
						url: "https://www.chosun.com/arc/outboundfeeds/rss/category/politics/?outputType=xml",
						title: "중알일보",
						url: "https://rss.joins.com/joins_politics_list.xml",
						title: "동아일보",
						url: "https://rss.donga.com/politics.xml",
						// title: "dcinside 국내야구 갤러리",
						// url: "https://alltimelegend.net/bbs/rss.php?bo_table=yagall"
					}
				],
				showSourceTitle: true,
				showPublishDate: true,
				broadcastNewsFeeds: true,
				broadcastNewsUpdates: true
			}
		},
	]
};

/*************** DO NOT EDIT THE LINE BELOW ***************/
if (typeof module !== "undefined") {module.exports = config;}
